{
  "weather": {
    "city_name": "Bangalore",
    "latitude": "12.295",
    "longitude": "76.987",
    "temperature": "25",
    "humidity": "50"
  }
}


<?xml version="1.0"?>
<records>
    <weather>
        <city_name>Bangalore</city_name>
        <latitude>12.295</latitude>
        <longitude>76.987</longitude>
        <temperature>25</temperature>
        <humidity>50</humidity>
    </weather>
</records>



<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/main_header_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="PARSING XML AND JSON DATA"
        android:textSize="20sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.431"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.08" />

    <Button
        android:id="@+id/main_parse_xml_btn_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Parse XML Data"
        android:textAllCaps="false"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/main_header_id"
        app:layout_constraintVertical_bias="0.253" />

    <Button
        android:id="@+id/main_parse_json_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Parse JSON Data"
        android:textAllCaps="false"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/main_parse_xml_btn_id"
        app:layout_constraintVertical_bias="0.237" />
</androidx.constraintlayout.widget.ConstraintLayout>


<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".ViewDataActivity">

    <TextView
        android:id="@+id/view_header_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="PARSING XML AND JSON DATA"
        android:textSize="20sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.497"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.04" />

    <TextView
        android:id="@+id/view_xml_label_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="XML Data"
        android:textSize="16sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toStartOf="@+id/view_json_label_id"
        app:layout_constraintHorizontal_bias="0.21"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/view_header_id"
        app:layout_constraintVertical_bias="0.076" />

    <TextView
        android:id="@+id/view_json_label_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginEnd="96dp"
        android:text="JSON Data"
        android:textSize="16sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/view_header_id"
        app:layout_constraintVertical_bias="0.076" />

    <TextView
        android:id="@+id/view_xml_content_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="xml content"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="@+id/view_xml_label_id"
        app:layout_constraintTop_toBottomOf="@+id/view_xml_label_id"
        app:layout_constraintVertical_bias="0.109" />

    <TextView
        android:id="@+id/view_json_content_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="json content"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="@+id/view_json_label_id"
        app:layout_constraintTop_toBottomOf="@+id/view_json_label_id"
        app:layout_constraintVertical_bias="0.107" />
</androidx.constraintlayout.widget.ConstraintLayout>






package com.computerlabspace.parsexmlandjson_program6;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    Button parseXMLBtn, parseJSONBtn;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        parseXMLBtn = (Button) findViewById(R.id.main_parse_xml_btn_id);
        parseJSONBtn = (Button) findViewById(R.id.main_parse_json_id);
        parseXMLBtn.setOnClickListener(this);
        parseJSONBtn.setOnClickListener(this);
    }

    @Override
    public void onClick(View view) {
        if(view.equals(parseXMLBtn)) {
            // Intent will act like a broadcaster
            Intent intent = new Intent(this,ViewDataActivity.class);
            intent.putExtra("dataType", "xml");
            startActivity(intent);
        } else if(view.equals(parseJSONBtn)) {
            Intent intent = new Intent(this,ViewDataActivity.class);
            intent.putExtra("dataType", "json");
            startActivity(intent);
        }
    }
}




package com.computerlabspace.parsexmlandjson_program6;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.util.JsonReader;
import android.widget.TextView;

import org.json.JSONException;
import org.json.JSONObject;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

public class ViewDataActivity extends AppCompatActivity {

    TextView xmlContentTextView, jsonContentTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_view_data);
        xmlContentTextView = (TextView) findViewById(R.id.view_xml_content_id);
        jsonContentTextView = (TextView) findViewById(R.id.view_json_content_id);
        Intent intent = getIntent();
        String dataType = intent.getStringExtra("dataType");
        if(dataType.equals("xml")) {
            xmlContentTextView.setText("Test xml parsed content");
            parseXML();
        } else if(dataType.equals("json")) {
            jsonContentTextView.setText("Test json parsed content");
            parseJSON();
        }
    }

    public void parseXML() {
        InputStream inputStream = null;
        try {
            inputStream = getAssets().open("weather.xml");
            JsonReader reader = new JsonReader(new InputStreamReader(inputStream));
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = dbf.newDocumentBuilder();
            Document doc = db.parse(inputStream);
            doc.normalize();
            NodeList nodeList = doc.getElementsByTagName("weather");
            for(int i=0; i<nodeList.getLength();i++) {
                Node node = nodeList.item(i);
                if(node.getNodeType() == Node.ELEMENT_NODE) {
                    Element element = (Element) node;
                    xmlContentTextView.setText("City_Name: "+element.getElementsByTagName("city_name").item(0).getTextContent() + "\n");
                    xmlContentTextView.append("Latitude: "+element.getElementsByTagName("latitude").item(0).getTextContent() + "\n");
                    xmlContentTextView.append("Longitude: "+element.getElementsByTagName("longitude").item(0).getTextContent() + "\n");
                    xmlContentTextView.append("Temperature: "+element.getElementsByTagName("temperature").item(0).getTextContent() + "\n");
                    xmlContentTextView.append("Humidity: "+element.getElementsByTagName("humidity").item(0).getTextContent());
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParserConfigurationException e) {
            e.printStackTrace();
        } catch (SAXException e) {
            e.printStackTrace();
        } finally {
            if(inputStream != null) {
                try {
                    inputStream.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void parseJSON() {
        try (InputStream inputStream = getAssets().open("weather.json")) {
            byte[] data = new byte[inputStream.available()];
            inputStream.read(data);
            String jsonString = new String(data);
            JSONObject jsonObject = new JSONObject(jsonString);
            JSONObject weather = jsonObject.getJSONObject("weather");
            jsonContentTextView.setText("City_Name: "+weather.getString("city_name") + "\n");
            jsonContentTextView.append("Latitude: "+weather.getString("latitude") + "\n");
            jsonContentTextView.append("Longitude: "+weather.getString("longitude") + "\n");
            jsonContentTextView.append("Temperature: "+weather.getString("temperature") + "\n");
            jsonContentTextView.append("Humidity: "+weather.getString("humidity") + "\n");
        } catch (IOException e) {
            e.printStackTrace();
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
}
